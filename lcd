#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <Servo.h>
#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>

// Define LCD Display
LiquidCrystal_I2C lcd(0x27, 16, 2); // I2C address 0x27, 16 columns and 2 rows

// Define Servo
Servo doorServo;
const int servoPin = D9;

// Define Relay
const int relayPin = D3;

// Define Nokia 5110 Display
#define RST_PIN   D4
#define CE_PIN    D0
#define DC_PIN    D2
#define DIN_PIN   D6
#define CLK_PIN   D5
Adafruit_PCD8544 display = Adafruit_PCD8544(DIN_PIN, CLK_PIN, DC_PIN, CE_PIN, RST_PIN);

// Define Analog Sensor
const int analogSensorPin = A3;

// Define WiFi
const char *ssid = "YourSSID";
const char *password = "YourPassword";
ESP8266WebServer server(80);

void setup() {
  Serial.begin(9600);
  lcd.begin(16, 2);
  lcd.clear();
  lcd.print("Initializing...");

  doorServo.attach(servoPin);
  pinMode(relayPin, OUTPUT);

  display.begin();
  display.setContrast(60); // Adjust contrast if needed

  connectToWiFi();
  setupWebServer();
}

void loop() {
  server.handleClient();
  
  // Read value from analog sensor
  int analogSensorValue = analogRead(analogSensorPin);

  // Display sensor value on Nokia 5110 display
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(BLACK);
  display.setCursor(0, 0);
  display.print("Analog Sensor:");
  display.setCursor(0, 10);
  display.print(analogSensorValue);
  display.display();
  
  // Add any additional logic for NodeMCU 1 here
}

void connectToWiFi() {
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
}

void setupWebServer() {
  server.on("/", HTTP_GET, handleRoot);
  server.begin();
  Serial.println("HTTP server started");
}

void handleRoot() {
  String content = "<html><body>";
  content += "<h1>Welcome to NodeMCU 1</h1>";
  content += "</body></html>";
  server.send(200, "text/html", content);
}
